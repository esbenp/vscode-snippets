{
	// Place your snippets for JavaScript here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"Bind class method": {
		"prefix": "classbind",
		"body": [
			"(this: any).$1 = this.$1.bind(this);",
			"$0"
		],
		"description": "Bind a class method to a class"
	},
	"Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	},
	"Input group": {
		"prefix": "inputgroup",
		"body": [
			"<FormGroup controlId=\"${1:controlId}\">",
			"\t<ControlLabel ${2:required}>${3:label}</ControlLabel>",
			"\t<FormInput name=\"${4:name}\" />",
			"</FormGroup>"
		],
		"description": "Create a form group with an input field"
	},
	"Modal": {
		"prefix": "modalwh",
		"body": [
			"const ${1:} = ({ onHide, onSubmit }: { onHide: Function, onSubmit: Function }) => {",
			"\treturn (",
			"\t\t<Modal>",
			"\t\t\t<Modal.Header>",
			"\t\t\t\t<Modal.Title>${2:title}</Modal.Title>",
			"\t\t\t</Modal.Header>",
			"\t\t\t<Modal.Body>",
			"\t\t\t\t$0",
			"\t\t\t</Modal.Body>",
			"\t\t\t<Modal.Footer>",
			"\t\t\t\t<button type=\"button\" className=\"btn btn-white\" onClick={onHide}>",
			"\t\t\t\t\tCancel",
			"\t\t\t\t</button>",
			"\t\t\t\t<ActionButton iconClass=\"glyphicon glyphicon-ok\" onClick={onSubmit}>${3:save-label}</ActionButton>",
			"\t\t\t</Modal.Footer>",
			"\t\t</Modal>",
			"\t)",
			"}"
		],
		"description": "Modal with header"
	},
	"Modal redux-form": {
		"prefix": "modalwhr",
		"body": [
			"let ${1:component} = ({ onHide, onSubmit }: { onHide: Function, onSubmit: Function }) => {",
			"\treturn (",
			"\t\t<Modal>",
			"\t\t\t<Modal.Header>",
			"\t\t\t\t<Modal.Title>${2:title}</Modal.Title>",
			"\t\t\t</Modal.Header>",
			"\t\t\t<Modal.Body>",
			"\t\t\t\t$0",
			"\t\t\t</Modal.Body>",
			"\t\t\t<Modal.Footer>",
			"\t\t\t\t<button type=\"button\" className=\"btn btn-white\" onClick={onHide}>",
			"\t\t\t\t\tCancel",
			"\t\t\t\t</button>",
			"\t\t\t\t<SaveButton onClick={onSubmit}>${3:save-label}</SaveButton>",
			"\t\t\t</Modal.Footer>",
			"\t\t</Modal>",
			"\t)",
			"}",
			"",
			"const ${4:form-key} = '${4:form-key}'",
			"",
			"${1:component} = reduxForm({",
			"\tkey: ${4:form-key},",
			"\tvalidate: (values) => {",
			"\t\tconst errors = {}",
			"\t\t",
			"\t\treturn errors",
			"\t}",
			"})(${1:component})"
		],
		"description": "Modal with header with redux-form"
	},
	"Toggle modal": {
		"prefix": "modaltoggle",
		"body": [
			"_toggle$1Modal() {",
			"\tthis.setState({",
			"\t\tshow$1Modal: !this.state.show$1Modal",
			"\t})",
			"}"
		],
		"description": "A class method to toggle modal state"
	}
}
